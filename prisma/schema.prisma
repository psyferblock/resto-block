datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Category {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  title String 
  desc String 
  color String 
  img String? 
  slug String  @unique
  products Product[]

}

model Product {
   id String @id @default(cuid())
  createdAt DateTime @default(now())
  title String 
  desc String 
  img String?
  productPrice Decimal
  isFeatured Boolean @default(false)
  options Json[]

  category Category @relation(fields:[catSlug] ,references:[slug])
  catSlug String 

  @@index([catSlug])
}




model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  order Order[]
  isAdmin Boolean @default(false)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Order {
   id String @id @default(cuid())
  createdAt DateTime @default(now())
  title String 
  desc String 
  price Decimal
  products Json[]
  status String
  user User  @relation(fields:[userEmail],references:[email])
  userEmail String

  intent_Id String? @unique 


  @@index([userEmail])
}