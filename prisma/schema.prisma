datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Category {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  title String 
  desc String 
  color String 
  img String? 
  slug String  @unique
  products Product[]

}

model Product {
   id String @id @default(cuid())
  createdAt DateTime @default(now())
  title String 
  desc String 
  img String?
  productPrice Decimal
  isFeatured Boolean @default(false)
  options Json[]

  category Category @relation(fields:[catSlug] ,references:[slug])
  catSlug String 
}




model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map(name: "email_verified")
  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @default(now()) @map(name: "updated_at")
  order Order
  @@map(name: "users")
}
model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "verification_requests")
}

model Order {
   id String @id @default(cuid())
  createdAt DateTime @default(now())
  title String 
  desc String 
  price Decimal
  products Json[]
  status String
  user User  @relation(fields:[userEmail],references:[email])
  userEmail String

  intent_Id String? @unique 

}